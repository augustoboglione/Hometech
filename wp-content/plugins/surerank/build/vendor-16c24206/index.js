"use strict";(globalThis.webpackChunksurerank=globalThis.webpackChunksurerank||[]).push([[1624],{24712:(e,i,t)=>{t(57048),t(61101)},61101:(e,i,t)=>{t.d(i,{A:()=>a});var n=t(57048);const r=()=>{const e={string:{unit:"characters",verb:"to have"},file:{unit:"bytes",verb:"to have"},array:{unit:"items",verb:"to have"},set:{unit:"items",verb:"to have"}};function i(i){return e[i]??null}const t={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Invalid input: expected ${e.expected}, received ${(e=>{const i=typeof e;switch(i){case"number":return Number.isNaN(e)?"NaN":"number";case"object":if(Array.isArray(e))return"array";if(null===e)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}return i})(e.input)}`;case"invalid_value":return 1===e.values.length?`Invalid input: expected ${n.stringifyPrimitive(e.values[0])}`:`Invalid option: expected one of ${n.joinValues(e.values,"|")}`;case"too_big":{const t=e.inclusive?"<=":"<",n=i(e.origin);return n?`Too big: expected ${e.origin??"value"} to have ${t}${e.maximum.toString()} ${n.unit??"elements"}`:`Too big: expected ${e.origin??"value"} to be ${t}${e.maximum.toString()}`}case"too_small":{const t=e.inclusive?">=":">",n=i(e.origin);return n?`Too small: expected ${e.origin} to have ${t}${e.minimum.toString()} ${n.unit}`:`Too small: expected ${e.origin} to be ${t}${e.minimum.toString()}`}case"invalid_format":return"starts_with"===e.format?`Invalid string: must start with "${e.prefix}"`:"ends_with"===e.format?`Invalid string: must end with "${e.suffix}"`:"includes"===e.format?`Invalid string: must include "${e.includes}"`:"regex"===e.format?`Invalid string: must match pattern ${e.pattern}`:`Invalid ${t[e.format]??e.format}`;case"not_multiple_of":return`Invalid number: must be a multiple of ${e.divisor}`;case"unrecognized_keys":return`Unrecognized key${e.keys.length>1?"s":""}: ${n.joinValues(e.keys,", ")}`;case"invalid_key":return`Invalid key in ${e.origin}`;case"invalid_union":default:return"Invalid input";case"invalid_element":return`Invalid value in ${e.origin}`}}};function a(){return{localeError:r()}}}}]);